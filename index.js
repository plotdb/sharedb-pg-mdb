// Generated by LiveScript 1.3.1
var sharedb, pg, MilestoneDB, Snapshot, MDB;
sharedb = require('sharedb');
pg = require('pg');
MilestoneDB = sharedb.MilestoneDB;
Snapshot = function(id, version, type, data, meta){
  return this.id = id, this.version = version, this.type = type, this.data = data, this.meta = meta, this;
};
MDB = function(opt){
  MilestoneDB.call(this, opt);
  this.interval = opt.interval || 500;
  this.pool = new pg.Pool(opt.ioPg);
  return this;
};
MDB.prototype = import$(Object.create(MilestoneDB.prototype), {
  query: function(q, p){
    var this$ = this;
    p == null && (p = []);
    return new Promise(function(res, rej){
      return this$.pool.connect(function(err, client, done){
        if (err) {
          done(client);
          rej(err);
          return;
        }
        return client.query(q, p, function(err, r){
          return err
            ? rej(err)
            : res(r);
        });
      });
    });
  },
  getMilestoneSnapshot: function(collection, id, version, callback){
    return this.query("select * from milestonesnapshots where collection = $1 and doc_id = $2 and version = $3", [collection, id, version]).then(function(r){
      var n;
      r == null && (r = {});
      if ((r.rows || (r.rows = [])).length === 0) {
        return callback(null, null);
      }
      n = r.rows[0];
      return callback(null, new Snapshot(n.doc_id, n.version, n.doc_type, d.data));
    })['catch'](function(it){
      console.log("[sharedb-pg-mdb] ", it);
      return callback(new Error("PostgreSQL MilestoneDB for ShareDB failed to get milestone snapshot."));
    });
  },
  saveMilestoneSnapshot: function(collection, snapshot, callback){
    return this.query("insert into milestonesnapshots (collection,doc_id,doc_type,version,data) values\n($1,$2,$3,$4,$5)", [collection, snapshot.id, snapshot.type, snapshot.v, snapshot.data]).then(function(){
      if (callback != null) {
        return callback(null);
      }
    })['catch'](function(it){
      console.log("[sharedb-pg-mdb] ", it);
      if (callback != null) {
        return callback(new Error("PostgreSQL MilestoneDB for ShareDB failed to save milestone snapshot."));
      }
    });
  }
});
module.exports = MDB;
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}